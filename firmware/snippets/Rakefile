require 'pathname'

require_relative 'lib/c_project'

Dir.glob("*/Rakefile").each { |subrakefile|
	include subrakefile
}

RootDir = Pathname.new(__FILE__).parent.relative_path_from( Pathname.new(__FILE__).parent )
ObjDir = RootDir.join('obj')
CProject.objDir = ObjDir

def obj( *files )
	files.flatten(1).map { |f| ObjDir.join Pathname.new(f).basename.sub_ext('.o').to_s }
end

SrcDir = RootDir.parent.join('src')

# FIRMWARE_ROOT=../../src
#
GccDir = Pathname.new("/Users/aaron/ti/gcc")
CC      = GccDir.join "bin", "msp430-elf-gcc"
LD      = GccDir.join "bin", "msp430-elf-gcc"
GDB     = GccDir.join "bin", "msp430-elf-gdb"
AR			= GccDir.join "bin", "msp430-elf-ar"

SupportFileDirectory = GccDir.join('include')
Device  = "msp430fr2311"

CFlags= %W( -I #{SupportFileDirectory} -I #{SrcDir} -mmcu=#{Device} -O2 -g )
LDFlags = %W( -L #{SupportFileDirectory} )

task :default => :all
task :all

LibCompanionFiles = Dir.glob( SrcDir.join("*.c") ) + Dir.glob( SrcDir.join("bsp","*.c") )
LibCompanion = "libcompanion.a"

directory ObjDir.to_s do |t|
	mkdir t.name unless File::directory?( t.name )
end

file LibCompanion.to_s => obj( LibCompanionFiles ) do |t|
	sh *([AR.to_s] + %W( -r #{t.name} ) + t.sources)
end

#rule ".o" => ObjDir.to_s

rule ".o" => ".c" do |t|
	sh *([CC.to_s] + CFlags + %W( -c -o #{t.name} #{t.source} ))
end

rule ".o" => ->(t){t.pathmap("../src/%f").ext(".c")} do |t|
	sh *([CC.to_s] + CFlags + %W( -c -o #{t.name} #{t.source} ))
end

rule ".o" => ->(t){t.pathmap("../src/bsp/%f").ext(".c")} do |t|
	sh *([CC.to_s] + CFlags  + %W( -c -o #{t.name} #{t.source} ))
end


# rule ".out" => ".o" do |t|
# 	sh *([LD.to_s] + LDFlags + %W( -o #{t.name} #{t.source} ))
# end

rule ".out" => LibCompanion

CProject.new( "blink_bsp", dir: "01_blink_bsp",
																srcs: ["blink_bsp.c"],
																libs: LibCompanion )

CProject.new( "watchdog_test", dir: "02_watchdog_test",
																srcs: ["watchdog_test.c"],
																libs: LibCompanion )

CProject.new( "xtal_init", dir: "03_xtal_init",
													srcs: ["xtal_init.c"],
 													libs: LibCompanion )

CProject.new( "timer_int", dir: "04_timer_int",
													srcs: ["timer_int.c"],
 													libs: LibCompanion )

CProject.new( "power_reset", dir: "05_power_reset",
													srcs: ["power_reset_test.c"],
													libs: LibCompanion )

CProject.new( "i2c_test", dir: "06_i2c_test",
													srcs: ["i2c_test.c"],
 													libs: LibCompanion )
